union op = Add | Sub | Mult

// Does basic pattern matching work?
inl main () =
    inl f = function
        | Add => fun x y => join (x + y)
        | Sub => fun x y => join (x - y)
        | Mult => fun x y => join (x * y)
    inl a = f Add 1 2 : i32
    inl b = f Sub 1 2 : i32
    inl c = f Mult 1 2 : i32
    dyn (a, b, c)