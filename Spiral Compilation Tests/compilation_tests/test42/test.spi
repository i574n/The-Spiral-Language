// Complex interpreter example on both fully static and partially static data. An advanced use of join points.
union rec arith x =
    | V : x
    | Add : arith x * arith x
    | Mult : arith x * arith x
inl main() =
    inl a = Add (V 1, V 2)
    inl b = Add (V 3, V 4)
    inl c : arith f32 = Mult (a, b)
    inl rec f x = 
        match x with
        | V x => x
        | Add (a, b) => g a + g b
        | Mult (a, b) => g a * g b
    and inl g x = 
        if var_is x then join f x 
        else f x
    // $"// static"
    inl ~x = g c
    // $"// dynamic"
    inl ~_ = g (Mult (dyn c, V 2))
    0i32