// Do the prototype contraints get propagated correctly?

prototype pw q w {number} e {number} r {number} : q w e r -> ()
nominal nw t1 t2 t3 = t1 * t2 * t3
nominal ne t0 t1 t2 t3 = t1 * t2 * t3
instance pw nw = fun _ => ()
instance pw ne t0 {float} = fun _ => ()

prototype pq q w {pw} e {int} r {int} : q w e r -> ()
nominal nq t0 (t1 : * -> * -> * -> *) t2 t3 = t1 t0 t2 t3 * t2 * t3
instance pq nq t0 {int} = fun _ => ()

inl foo forall (t : * -> (* -> * -> * -> *) -> * -> * -> *). =
    inl y : t bool (ne f32) i32 i32 = real ()
    pq y