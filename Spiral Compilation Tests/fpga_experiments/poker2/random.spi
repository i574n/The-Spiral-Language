nominal random_device = $"std::random_device"
nominal mt = $"std::mt19937"
nominal uint_dist = $"std::uniform_int_distribution<`mt::result_type>"

nominal rng = mt * uint_dist

// Makes an inclusive distribtion with an (inclusive) [from,to] range.
inl make_dist (from, to : i32 * i32) : rng =
    inl dev = $"`random_device v$" : random_device
    inl mt = $"`mt v$(!dev())" : mt
    inl dist = $"`uint_dist v$(!from,!to)" : uint_dist
    rng (mt,dist)

inl get_int (rng (mt,dist)) : i32 = $"!dist(!mt)"


