prototype print t : t -> string

nominal pint32 = ()
nominal pstring = ()
nominal ppair a b = a * b

instance print pint32 = fun _ => "int32"
instance print pstring = fun _ => "string"
instance print ppair a {print} b {print} = fun (ppair(a,b)) =>
    inl a = print a
    inl b = print b
    $'!a + !b '

inl main() : () =
    inl (*.) a b = ppair(a,b)
    inl q = pint32 *. pstring *. pstring
    $'printfn "%s" !q '
    ()