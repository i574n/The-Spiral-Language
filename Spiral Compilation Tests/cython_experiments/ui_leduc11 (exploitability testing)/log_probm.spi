// During enumeration the sample probability is 1.
inl from_policy x = log_prob {sampled=log 1; policy=log x}
// When the sample and policy are the same.
inl from_sample x = log_prob {sampled=log x; policy=log x}
// When the sample and the policy differ.
inl from {sampled policy} = log_prob {sampled=log sampled; policy=log policy}
inl exp (log_prob {sampled policy}) = exp (policy - sampled)
inl add (log_prob a) (log_prob b) = log_prob {sampled=a.sampled+b.sampled; policy=a.policy+b.policy}
inl sub (log_prob a) (log_prob b) = log_prob {sampled=a.sampled-b.sampled; policy=a.policy-b.policy}