// Liar's Die/Dudo in CPS'd form

type number = i32
type rank = i32
type claim = number * rank
union action = Claim: claim | Dudo

type player = {id : u8; die : rank}
type players = player * player

open nodes
inl Game : game (pl2 _ _) _ r2 i32 action =
    inl claims = a64.map claim_ ;[1,2; 1,3; 1,4; 1,5; 1,6; 1,1; 2,2; 2,3; 2,4; 2,5; 2,6; 2,1]
    inl actions = a64.append claims (a64.singleton Dudo)
    inl dice : array i32 = ;[1;2;3;4;5;6]

    let rec loop (number,rank as claim) (p1,p2 : players) =
        inl from = a64.findIndex ((=) (Claim: claim)) actions + 1
        action p1.id (a64.sliceFrom from actions) function
        | Claim: x => loop x (p2,p1)
        | Dudo =>
            inl check_guess x = if x = 1 || x = rank then 1 else 0
            inl dice_guessed = check_guess p1.die + check_guess p2.die
            inl winner_id = if dice_guessed < number then p1.id else p2.id
            terminal (r2 (winner_id, 1))
    
    let id = 0
    sample (Some: id) dice fun die =>
    inl p1 = {id die}

    let id = 1
    sample (Some: id) dice fun die =>
    inl p2 = {id die}
    
    action p1.id claims function
    | Dudo => failwith "impossible"
    | Claim: claim => loop claim (p2,p1)