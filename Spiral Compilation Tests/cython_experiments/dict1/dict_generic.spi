nominal bucket key value = ra u64 key * ra u64 value * ra u64 u64
type field x = a u64 (ra u64 x)
nominal table key value = field key * field value * field u64

inl table_length (table (a,b,c)) = length a
inl table_index (table (a,b,c)) i = bucket (index a i, index b i, index c i)
inl table_init size = table (am.init size (fun _ => am.empty), am.init size (fun _ => am.empty), am.init size (fun _ => am.empty))
inl bucket_index (bucket (a,b,c)) i = {key=index a i; value=index b i; hkey=index c i}
inl bucket_add (bucket (a,b,c)) {key value hkey} = rm.add a key . rm.add b value . rm.add c hkey
inl bucket_length (bucket (a,b,c)) = length a
inl bucket_remove (bucket (a,b,c)) i = ignore (rm.pop a i) . ignore (rm.pop b i) . ignore (rm.pop c i)
inl bucket_set (bucket (a,b,c)) i {key value hkey} = set a i key . set b i value . set c i hkey