open rx
open kivy

inl control c l = create fun obs =>
    inl c = c()
    inl disp = disposablem.composite.create()
    listm.iter (fun f => match f c with None => () | Some: (x : disposable) => disposablem.composite.add disp x) l
    observerm.on_next obs (toWidget c)
    toDisposable disp

inl children l c =
    inl len = listm.length l
    inl in_front = a64.init len (fun _ => 0)
    inl prev_widget = a64.init len (fun _ => None)
    inl disp = disposablem.composite.create()
    listm.fold (fun i x =>
        inl subs = subscribe x fun x => 
            match a64.index prev_widget i with
            | None => loop.forDown' (nearFrom: i to: 0) (fun i => a64.set in_front i (a64.index in_front i + 1))
            | Some: x => removeWidget x c
            addWidget x (a64.index in_front i) c
            a64.set prev_widget i (Some: x)
        disposablem.composite.add disp subs
        i+1
        ) 0 l
    |> fun _ => Some: toDisposable disp

inl (~-) f x c = f x c . None
inl (~+) f x c = Some: subscribe x (fun x => f x c)
inl (~@) f x c = Some: (f x c : disposable)
inl (~#) f x c =
    inl disp = disposablem.serial.create()
    inl x = subscribe x (fun x => disposablem.serial.set disp (f x c))
    inl d = disposablem.composite.create()
    listm.iter (disposablem.composite.add d) [x; toDisposable disp]
    toDisposable d

inl button x = control buttonm.create x
inl boxlayout x = control boxlayoutm.create x
inl label x = control labelm.create x
