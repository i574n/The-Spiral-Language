inl main () =
    open leduc
    open nodes
    inl d = dictm.empty
    loopw.for' (from: 0i32 nearTo: 20) fun i =>
        !!!!Import("time")
        inl t = $"time.perf_counter()" : f64
        $"print('start training')"
        loopw.for' (from: 0i32 nearTo: 100 * 2000) fun _ =>
            open agent.cfr_sample_learned_infoset
            ignore <| leduc.start (nodes.nodes_2p true (funsTrain TrainCurrentPolicy d, funsTrain PlayCurrentPolicy d))
            ignore <| leduc.start (nodes.nodes_2p true (funsTrain PlayCurrentPolicy d, funsTrain TrainCurrentPolicy d))
        inl t' = $"time.perf_counter()" : f64
        inl q = t' - t
        $"print('done training -', !q)"
        inl d_test = dictm.empty
        loopw.for' (from: 0i32 nearTo: 500) fun _ =>
            open agent.cfr_enum
            inl p1 = funsTrain TrainCurrentPolicy d_test
            open agent.cfr_sample_learned_infoset
            inl p2 = funsTest d
            ignore <| leduc.start (nodes.nodes_2p false (p1, p2))
        open agent.cfr_enum
        inl p1 = funsTrain PlayCurrentPolicy d_test
        open agent.cfr_sample_learned_infoset
        inl p2 = funsTest d
        inl r = leduc.start (nodes.nodes_2p false (p1, p2))
        $"print('summary -',!i,!r)"