type SpiralType0 =
    | SpiralType0_1
    | SpiralType0_2
let rec method_0 () : SpiralType0 * SpiralType0 * SpiralType0 * SpiralType0 =
    (SpiralType0_1, SpiralType0_1, SpiralType0_1, SpiralType0_1)
and method_1 () : int64 =
    1L
and method_2 () : int64 =
    2L
and method_3 () : int64 =
    3L
and method_4 () : int64 =
    4L
let ((var_1 : SpiralType0), (var_2 : SpiralType0), (var_3 : SpiralType0), (var_4 : SpiralType0)) = method_0 ()
let ((var_17 : int64)) =
    match var_1 with
    | SpiralType0_1 ->
        match var_2 with
        | SpiralType0_1 ->
            method_1 ()
        | SpiralType0_2 ->
            match var_3 with
            | SpiralType0_1 ->
                match var_4 with
                | SpiralType0_1 ->
                    method_2 ()
                | SpiralType0_2 ->
                    method_3 ()
            | SpiralType0_2 ->
                method_4 ()
    | SpiralType0_2 ->
        match var_3 with
        | SpiralType0_1 ->
            match var_4 with
            | SpiralType0_1 ->
                method_2 ()
            | SpiralType0_2 ->
                method_4 ()
        | SpiralType0_2 ->
            method_4 ()
