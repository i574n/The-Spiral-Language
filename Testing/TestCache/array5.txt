let rec method_0 ((var_3 : (int64 [])), (var_4 : int64)) : unit =
    let ((var_5 : bool)) = var_4 < 16L
    if var_5 then
        let ((var_6 : int64)) = var_4 + 1L
        let ((var_7 : int64)) = method_4 (var_4)
        let () = var_3.[int32 var_4] <- var_7
        method_0 (var_3, var_6)
    else
        ()
and method_1 ((var_13 : (int64 [])), (var_3 : (int64 [])), (var_8 : int64), (var_14 : int64)) : unit =
    let ((var_15 : bool)) = var_14 < var_8
    if var_15 then
        let ((var_16 : int64)) = var_14 + 1L
        let ((var_17 : int64)) = method_5 (var_14, var_3)
        let () = var_13.[int32 var_14] <- var_17
        method_1 (var_13, var_3, var_8, var_16)
    else
        ()
and method_2 ((var_13 : (int64 [])), (var_20 : (int64 [])), (var_19 : int64), (var_22 : int64), (var_21 : int64)) : int64 =
    let ((var_23 : bool)) = var_22 < var_19
    if var_23 then
        let ((var_24 : int64)) = var_22 + 1L
        let ((var_25 : int64)) = var_13.[int32 var_22]
        let ((var_26 : bool)) = 15L < var_25
        let ((var_28 : int64)) =
            if var_26 then
                let () = var_20.[int32 var_21] <- var_25
                var_21 + 1L
            else
                var_21
        method_2 (var_13, var_20, var_19, var_24, var_28)
    else
        var_21
and method_3 ((var_35 : (int64 [])), (var_20 : (int64 [])), (var_31 : int64), (var_36 : int64)) : unit =
    let ((var_37 : bool)) = var_36 < var_31
    if var_37 then
        let ((var_38 : int64)) = var_36 + 1L
        let ((var_39 : int64)) = method_6 (var_36, var_20)
        let () = var_35.[int32 var_36] <- var_39
        method_3 (var_35, var_20, var_31, var_38)
    else
        ()
and method_4 ((var_1 : int64)) : int64 =
    var_1
and method_5 ((var_9 : int64), (var_3 : (int64 []))) : int64 =
    let ((var_10 : int64)) = var_3.[int32 var_9]
    2L * var_10
and method_6 ((var_32 : int64), (var_20 : (int64 []))) : int64 =
    var_20.[int32 var_32]
let ((var_3 : (int64 []))) = Array.zeroCreate (System.Convert.ToInt32 16L)
let ((var_4 : int64)) = 0L
let () = method_0 (var_3, var_4)
let ((var_8 : int64)) = var_3.LongLength
let ((var_13 : (int64 []))) = Array.zeroCreate (System.Convert.ToInt32 var_8)
let ((var_14 : int64)) = 0L
let () = method_1 (var_13, var_3, var_8, var_14)
let ((var_19 : int64)) = var_13.LongLength
let ((var_20 : (int64 []))) = Array.zeroCreate (System.Convert.ToInt32 var_19)
let ((var_21 : int64)) = 0L
let ((var_22 : int64)) = 0L
let ((var_31 : int64)) = method_2 (var_13, var_20, var_19, var_22, var_21)
let ((var_35 : (int64 []))) = Array.zeroCreate (System.Convert.ToInt32 var_31)
let ((var_36 : int64)) = 0L
let () = method_3 (var_35, var_20, var_31, var_36)
