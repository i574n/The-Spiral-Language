// Arith
type SpiralType0 =
    | SpiralType0_3 of int64
    | SpiralType0_2 of SpiralType0 * SpiralType0
    | SpiralType0_1 of SpiralType0 * SpiralType0
let rec method_0 ((var_1 : SpiralType0)) : int64 =
    match var_1 with
    | SpiralType0_3 var_2 ->
        var_2
    | SpiralType0_2 (var_3, var_4) ->
        let ((var_5 : int64)) = method_0 (var_3)
        let ((var_6 : int64)) = method_0 (var_4)
        var_5 + var_6
    | SpiralType0_1 (var_8, var_9) ->
        let ((var_10 : int64)) = method_0 (var_8)
        let ((var_11 : int64)) = method_0 (var_9)
        var_10 * var_11
let ((var_1 : SpiralType0)) = SpiralType0_1 (SpiralType0_2 (SpiralType0_3 1L, SpiralType0_3 2L), SpiralType0_2 (SpiralType0_3 3L, SpiralType0_3 4L))
let ((var_14 : int64)) = method_0 (var_1)
